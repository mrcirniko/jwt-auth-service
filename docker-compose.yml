services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:  # üõ†Ô∏è –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ RabbitMQ
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    build: .
    restart: always
    depends_on:
      - db
      - rabbitmq
    environment:
      DATABASE_URL: postgresql://myuser:mypassword@db/mydatabase
      SECRET_KEY: mysecretkey
    ports:
      - "8000:8000"
    volumes:
      - .:/app

  worker:
    build: .
    restart: always  # <-- –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    depends_on:
      - rabbitmq
    env_file: 
      - .env
    environment:
      DATABASE_URL: postgresql://myuser:mypassword@db/mydatabase
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    command: ["python3", "worker.py"]
    volumes:
      - .:/app

volumes:
  postgres_data:
